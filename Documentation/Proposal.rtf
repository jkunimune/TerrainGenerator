{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fnil\fcharset77 KannadaMN;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs48 \cf0 Civi HD\

\b0\fs24 \

\b Overview:
\b0 \
	For my computer science independent project, I will program Civi HD, the sequel to the proclaimed screen-saver Civi.  Civi was a program I made for the Meggy Jr. during the second semester last year.  It involved a random number of empires that would spread, fight, colonize, industrialize, decay, revolutionize, and more over time, just like real civilizations.  I dubbed it \'d2Civi\'d3 as short for \'d2civilization\'d3 (Civ was already taken).  While it was interesting to watch, the two things that I wished I could have fixed were the 8x8 nature of the screen and the fact that the civilizations were playing out on a blank terrain-less square.  Well, now I can!\
	With the power of Java and object-oriented programming, I will create Civi HD, an entertainment app that will generate a spherical surface onto which will spawn various Civis, which will spread, fight, decay, and all that jazz automatically.  My project will occur in three parts.\
	Part I: The Terrain.  I have already started this portion.  A realistic spherical terrain will generate using plate tectonic, orographic effect, and erosion algorithms.\
	Part II: The Civis.  This will be modeled largely off of my Meggy Jr. version of Civi (and also probably influenced by Sid Meier\'d5s Civ V).  It will involve the spawning and behavior of empires on the generated surface, as certain natural disasters incurred by the world itself.\
	Part III: The God.  This part is basically what I plan to strive for but do not necessarily expect to accomplish.  If I have extra time after parts I and II, I will create an interactive interface that will allow the user to throw meteors, start earthquakes, and spark revolutions.  The user basically becomes a malicious god.\
\

\b Details:\

\b0 	The program will start by generating a map.  This will be created by plates of land and sea that spread across the map until it is full.  Then, the program will apply plate tectonics such that plates can collide to form mountain ranges, island chains, ocean rifts, and sea trenches.  Meteorites will bombard the surface of the world, creating a random number of small craters.  The map will be randomized and smoothed out a bit to give it a more realistic look, and then each point will be assigned a temperature and rainfall level based on its latitude and geographic location (orographic effect).  Each point will get a biome based on its climate and altitude, and then it will rain.  Water will naturally flow toward the ocean, eroding land as it goes.  This will give me rivers and lakes.\
	Once the terrain has generated, a random number of Civis with random colors will spawn.  The Civis will start by claiming territory at a random rate.  There are four levels of ownership that a Civi can claim over land.  Territory is the lowest level, and only causes a thin border to be placed around the claimed area.  Territory spreads fastest over flat land and slower over rivers, mountains, and oceans (oceans can only be claimed after the medieval era).  Settlement is the next level, and represents when claimed territory has actually been settled in.  Settled areas are shaded with the color of the Civi.  Settlement spreads fastest along coast and freshwater, and slower through ocean (ocean can only be settled in the future era).  Urbanization begins after the industrial era, and tends to form many concentrated dots of urbanization rather than large swaths.  Urbanization is marked with darker areas of settlement.  Utopia is the highest level, indicated by lightly colored land.  It starts in the prosperity era and always spreads in perfect circles, and spreads at the same rate over all terrain.  Unfortunately, utopias are not possible to maintain, and will inevitably revert to unclaimed land by the apocalypse era.\
	Once territory has been claimed, wars will become common.  During war, a certain Civi may claim some of the land owned by someone else.  In this case, that land becomes disputed, and is marked with stripes of the colors of the opposing Civis.  When land becomes disputed, it has a chance to reduce its ownership level.  Disputed territory can spread either way at a rate based on the aggressor\'d5s military, and it can be reclaimed by either side at a rate based on the weakness of the defender\'d5s military.  This means wars between larger militaries will last longer.  Militaries will drift randomly for all Civis, as do their likelihood to wage war, so a powerful diplomat may evolve into a puny warmonger.  If there is no more disputed territory, or if the Civis randomly decide to sign a peace treaty, the war ends.  If a Civi loses its capital (the point from which it started), all of its territory is given to the aggressor.\
	Science is a behind-the-scenes but important mechanic.  All Civis will have a science budget and a science level.  The budget will drift randomly, and the level will increase based on the budget.  Whenever a science level breaks a multiple of ten, the Civi receives a science and military boost, and a new era is entered, which gives various bonuses to the Civi.  The ancient era is the original era, which all Civis start with.  The classical era allows revolutions to begin.  The medieval era allows Civis to claim ocean, and the renaissance era allows them to settle in areas not directly connected to already settled territory.  The industrial era allows for urbanization, and the modern era allows for the use of nukes in war.  The future era allows for the settlement and urbanization of ocean.  The prosperity era allows for the creation of utopias.  Finally, the apocalypse era automatically induces the apocalypse for the Civi.\
	Revolutions are a key event in the creation of new Civis.  They are the only way to create new Civis, in fact, other than Civis randomly spawning into unclaimed territory.  Unlike random spawns, Civis created by revolution automatically have the same science level as the Civi from whence they came and are automatically at war with that Civi.  Revolutions can succeed by taking over the original Civi, fail by being defeated by the motherland, or create a new Civi by signing a peace treaty.\
	To counter revolutions, which create Civis, there are apocalypses, which end them.  Apocalypses are triggered by a countdown, which prevents any Civi from living longer than 1000 years.  This countdown is accelerated by the acquisition of land, the waging of wars, and being in the apocalypse era.  Thus, large warmongers with lots of \'d2utopias\'d3 will die very quickly.  During the apocalypse, settlement and urban areas will be gradually reduced to territory, and territory and utopias reduced to unclaimed land.\
	Civis will also be weakened by natural disasters.  Earthquakes will appear occasionally on fault lines.  If the earthquake occurs in the ocean, it will also impact all points on the coast of that ocean with a tsunami.  Volcanoes can erupt on especially faulty fault lines.  All of these events will reduce ownership levels by varying degrees, except utopias, which are immune to natural disasters.  Tsunamis reduce it by one, bringing territory to unclaimed land, earthquakes by two, reducing settled areas to unclaimed land, and volcanoes completely, reducing everything to unclaimed land.  Meteors will also occasionally pummel the earth, which both makes land become unclaimed and creates a dent in the planet\'d5s surface.  Finally, sea levels will oscillate slowly, which will cause some tiles to vary between land and sea.  Sea tiles must be relinquished unless the Civi that owns it has entered the future era.  One not-so-natural disaster is nuclear warheads, which are utilized during war by Civis that have entered the modern era.  Nuclear warheads will randomly strike land owned by the opposing Civi and replace it with nuclear fallout, such that it cannot be settled until the radiation fades away after many years.  Nuclear warheads can destroy utopias.\
\

\b Program layout:
\b0 \
	The Civi HD program will be accessed through the main method of the static CiviHDDriver class.  In this method, three objects will be invoked: Map, the Globe, and the Civis. \
	Map is an interface, which will control the visual output of the program.  Map will have a constructor that takes a Globe and opens a new window for Civi HD, a BufferedImage, an instance of the Globe class, and an abstract method display(String colorScheme).  Implementations of the Map interface will each have a unique display(String colorScheme) method that projects the surface of the Globe onto the BufferedImage according to a given algorithm, such as the Mercator projection algorithm, and write it to the computer screen.  This will allow easy interchangeability for the manner in which Civi is displayed, without affecting the program itself.\
	Globe is a class that will hold and manage data for the map on which Civi takes place.  The main feature of the Globe class will be an irregular matrix of Tiles, which will be created during the constructor based on a given radius.  Each Tile will represent a section of the world\'d5s surface, and contain instance variables for altitude, biome, owner, development, etc.  The irregular matrix in Globe will be an array of arrays of varying lengths, according to trigonometric functions.  Thus, the surface will represent a sphere rather than a cylinder.  Globe will have getter methods to reference tiles at different points.  It will also have a public method, generate(), to randomly generate terrain (part I of my project).\
	The final, and perhaps most important part of my program, is the ArrayList<Civi>.  Civi is a class that will represent a country or empire that roams the surface of the Globe.  It will have instance variables for military strength, scientific advancement, happiness, and other statistics of the like, and a constructor to randomize these stats.  It will also have an ArrayList<Tile> to help keep track of which Tiles it owns.  The Civi class will have a public method update() to automatically cause the Civi to wage war, scientifically advance, spread, decay, fight civil wars, colonize, industrialize, and things like that.}